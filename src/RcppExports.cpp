// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Cpp_rowSums
NumericVector Cpp_rowSums(const NumericMatrix& x);
RcppExport SEXP _omicsRWR_Cpp_rowSums(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_rowSums(x));
    return rcpp_result_gen;
END_RCPP
}
// Cpp_colSums
NumericVector Cpp_colSums(const NumericMatrix& x);
RcppExport SEXP _omicsRWR_Cpp_colSums(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_colSums(x));
    return rcpp_result_gen;
END_RCPP
}
// Arma_Inv
arma::mat Arma_Inv(const arma::mat& x);
RcppExport SEXP _omicsRWR_Arma_Inv(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Arma_Inv(x));
    return rcpp_result_gen;
END_RCPP
}
// rwr_cpp
List rwr_cpp(NumericMatrix adj_mat, NumericVector init_scores, Nullable<NumericVector> int_scores, double restart_prop, int num_iter, double delta);
RcppExport SEXP _omicsRWR_rwr_cpp(SEXP adj_matSEXP, SEXP init_scoresSEXP, SEXP int_scoresSEXP, SEXP restart_propSEXP, SEXP num_iterSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type adj_mat(adj_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type init_scores(init_scoresSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type int_scores(int_scoresSEXP);
    Rcpp::traits::input_parameter< double >::type restart_prop(restart_propSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(rwr_cpp(adj_mat, init_scores, int_scores, restart_prop, num_iter, delta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_omicsRWR_Cpp_rowSums", (DL_FUNC) &_omicsRWR_Cpp_rowSums, 1},
    {"_omicsRWR_Cpp_colSums", (DL_FUNC) &_omicsRWR_Cpp_colSums, 1},
    {"_omicsRWR_Arma_Inv", (DL_FUNC) &_omicsRWR_Arma_Inv, 1},
    {"_omicsRWR_rwr_cpp", (DL_FUNC) &_omicsRWR_rwr_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_omicsRWR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
